@model Standartstyle.Models.GoodModel
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Styles.Render("~/Content/fileuploader")
<div class="container-fluid">
    <div class="row clearfix"></div>
    <div class="form-group col-md-12">
        @using (Ajax.BeginForm("SaveGood", "Goods", new AjaxOptions
        {
            UpdateTargetId = "steps",
            HttpMethod = "Post",
            InsertionMode = InsertionMode.Replace,
            OnSuccess = "successCallback",
            OnFailure = "failureCallback",
        }, new { id = "ContractForm" }))
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="vert-offset-top-1"></div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-10 col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <label>Основные данные</label>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.Name, new { @class = "col-form-label" })
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control mustHave" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(m => m.SelectedCategoryCode, new { @class = "col-form-label" })
                                    @Html.DropDownListFor(m => m.SelectedCategoryCode, Model.Categories, new { @class = "form-control mustHave" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.Width, new { @class = "col-form-label" })
                                    @Html.TextBoxFor(m => m.Width, new { @class = "form-control mustHave" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.Height, new { @class = "col-form-label" })
                                    @Html.TextBoxFor(m => m.Height, new { @class = "form-control mustHave" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.Depth, new { @class = "col-form-label" })
                                    @Html.TextBoxFor(m => m.Depth, new { @class = "form-control mustHave" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    @Html.LabelFor(m => m.Description, new { @class = "col-form-label" })
                                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control mustHave vresize" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-10 col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <label>Изображения</label>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="form-group col-md-12" id="existingImages" hidden>
                                    <label>Загруженные фото</label>
                                </div>
                            </div>
                            <div class="row" id="newImages">
                                <div class="form-group col-md-12">
                                    <label>Новые фото</label>
                                    <div class="row" id="newImagesGalery">
                                    </div>
                                    <div id="NewImagesNamesList">
                                        @for (int i = 0; i < Model.NewImagesNames.Count; i++)
                                        {
                                            @Html.Hidden("NewImagesNames[" + i + "]", Model.NewImagesNames[i])
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <div class="col-lg-12 col-md-12">
                                        <div class="file-loading">
                                            <input id="file-uploader" type="file" accept="image/*" multiple>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-10 col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <label>Метки, теги</label>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-10 col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <label>Изготовлено из ДСП</label>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <button type="submit" id="submitFormBtn" class="btn btn-success disabled" disabled="disabled">
                        <div class="btnBack">Сохранить</div>
                    </button>
                    <button class="btn btn-default">
                        <div class="btnBack">Отмена</div>
                    </button>
                </div>
            </div>

        }
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/fileupload")
    @Scripts.Render("~/Scripts/load-image.all.min.js")
    <script type="text/javascript">
        var fileFormFlag = true,
            fieldFormFlag = true,
            fileNames = [];

        function checkMusthaveFields() {
            var result = true;
            var musthaveFields = $(document).find(".mustHave");
            $(musthaveFields).each(function (idx, elem) {
                if ($(elem).val() === "") {
                    result = false;
                }
            });
            fieldFormFlag = result;
            checkFormFlags();
        }

        function checkFormFlags() {
            if (fieldFormFlag && fileFormFlag) {
                $("#submitFormBtn").removeAttr("disabled");
                if ($("#submitFormBtn").hasClass("disabled")) {
                    $("#submitFormBtn").removeClass("disabled");
                }
            }
            else {
                $("#submitFormBtn").attr("disabled", "disabled");
                if (!$("#submitFormBtn").hasClass("disabled")) {
                    $("#submitFormBtn").addClass("disabled");
                }
            }
        }


        $(document).ready(function () {
            checkMusthaveFields();

            var $fileInputObject = $('#file-uploader'),
                initPlugin = function () {
                    $fileInputObject.fileinput({
                        uploadAsync: false,
                        language: 'ru',
                        showCaption: false,
                        dropZoneEnabled: false,
                        fileActionSettings: false,
                        autoReplace: true,
                        uploadUrl: '@Url.Action("UploadFiles", "Image")',
                        allowedFileExtensions: ['jpg', 'png', 'jpeg'],
                        previewFileType: "image",
                        browseClass: "btn btn-success",
                        browseLabel: "Выбрать изображения",
                        browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
                        uploadClass: "btn btn-info",
                        uploadLabel: "Загрузить",
                        uploadIcon: "<i class=\"glyphicon glyphicon-upload\"></i> ",
                        showCaption: true,
                        showPreview: false,
                        showRemove: false,
                        showUpload: true,
                        uploadAsync: false,
                        maxFileSize: 40960
                    });
                };

            initPlugin();

            $(".mustHave").on("change", function () {
                checkMusthaveFields();
            });

            $fileInputObject.on('filebatchuploadsuccess', function (event, data, previewId, index) {
                var form = data.form, files = data.files, extra = data.extra,
                    response = data.response, reader = data.reader;
                if ($fileInputObject.data('fileinput')) {

                    var images = response.files;
                    $.post('@Url.Action("List", "Image")', { images: images }, function (result) {
                        $("#newImagesGalery").append(result);
                        var images = $("#newImagesGalery").find("img");
                        $(images).each(function (idx, elem) {
                            var imgUrl = $(elem).attr("src");
                            var loadingImage = loadImage(imgUrl, function (img) {
                                var imageParent = $("#newImagesGalery").find("#" + $(elem).attr("name"));
                                $(imageParent).html("");
                                $(imageParent).append(img);
                            }, {
                                maxWidth: 200,
                                maxHeight: 200,
                                canvas: true,
                                orientation: true
                            });
                        });
                    });

                    $(images).each(function (idx, image) {
                        var fileName = image.Name + "." + image.Extension;
                        if (fileNames.indexOf(fileName) < 0) {
                            fileNames[fileNames.length] = fileName;
                        }
                    });
                    $("#NewImagesNamesList").html("");
                    $(fileNames).each(function (idx, name) {
                        var template = "<input id='NewImagesNames_" + idx + "_' name='NewImagesNames[" + idx + "]' type='hidden' value='" + name + "'>";
                        $("#NewImagesNamesList").append(template);
                    });
                }
            });
        });
    </script>
}

